{"version":3,"sources":["context/GridContext.js","Styles/FormularioStyles.js","components/Formulario.jsx","Styles/ListaUsuariosStyles.js","components/ListaUsuarios.jsx","Styles/SearchBarStyles.js","components/SearchBar.jsx","Styles/GridStyles.js","components/Grid.jsx","Styles/GlobalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["GridContext","createContext","GridProvider","children","useState","Users","setUsers","id","usuario","email","fecha","edad","Registro","setRegistro","filter","setfilter","FilterisOn","setFilterisOn","Provider","value","SectionFormulario","styled","section","Formulario","useContext","Validation","setValidation","OnChange","e","preventDefault","name","currentTarget","type","placeholder","onChange","onClick","trim","SectionUsuarios","ListaUsuarios","OnErase","registro","OnEditar","itemEdit","length","map","item","includes","FormularioSearch","form","SearchBar","Section","Search","nav","Container","div","FormularioContainer","ListaUsuariosContainer","Grid","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.714f3233.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const GridContext = createContext();\r\nexport const GridProvider = ({ children }) => {\r\n    // estado que guardara la lista de usuarios registrados\r\n    const [Users, setUsers] = useState([]);\r\n    // estado que tendra valores del formulario\r\n    const [Registro, setRegistro] = useState({\r\n        id : \"\" ,\r\n        usuario : \"\",\r\n        email : \"\",\r\n        fecha : \"\",\r\n        edad : \"\",\r\n    })\r\n    // estado filtro \r\n    const [filter, setfilter] = useState([]);\r\n    const [FilterisOn, setFilterisOn] = useState(false);\r\n    return (\r\n        <GridContext.Provider\r\n        value = {{\r\n            Users, setUsers,\r\n            Registro , setRegistro,\r\n            filter, setfilter,\r\n            FilterisOn , setFilterisOn\r\n        }}>\r\n            { children }\r\n        </GridContext.Provider>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const SectionFormulario = styled.section`\r\n    width: 100%;\r\n    height:100%;\r\n    form{\r\n        width: 100%;\r\n        height:100%;\r\n        display:flex;\r\n        flex-direction:column;\r\n        align-items:center;\r\n        justify-content:space-between;\r\n        input{\r\n            border-radius:20px;\r\n            color:black;\r\n            text-align:center;\r\n            font-size:20px;\r\n            width:100%;\r\n            height:10%;\r\n        }\r\n    }\r\n`;","import React, { useContext , useState } from \"react\";\r\n\r\nimport { GridContext } from \"../context/GridContext\";\r\n\r\nimport {SectionFormulario} from \"../Styles/FormularioStyles\";\r\nconst Formulario = () => {\r\n    const { Users, setUsers, Registro, setRegistro} = useContext(GridContext)\r\n    // estado que guarda si el formulario se envia vacio\r\n    const [Validation, setValidation] = useState(false)\r\n\r\n    // funcion que registra cualquier cambio\r\n    const OnChange = (e) => {\r\n        e.preventDefault();\r\n        const name = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n        setRegistro(\r\n            {\r\n                ...Registro,\r\n                [name]: value\r\n            }\r\n        )\r\n    }\r\n    // funcion que comprueba y registra el usuario\r\n\r\n    const OnClick = (e) => {\r\n        e.preventDefault();\r\n        // comprobar que ningun campo este en vacio\r\n        if (id.trim() == \"\" || usuario.trim() == \"\" || email.trim() == \"\" || fecha.trim() == \"\" || edad.trim() == \"\") {\r\n            setValidation(true)\r\n        }else{\r\n            setValidation(false);\r\n            setUsers([...Users,Registro]);\r\n            // resetear formulario\r\n            setRegistro({\r\n                id : \"\" ,\r\n                usuario : \"\",\r\n                email : \"\",\r\n                fecha : \"\",\r\n                edad : \"\",\r\n            })\r\n        }\r\n    }\r\n\r\n    // destructuring a registro\r\n\r\n    const { id, usuario, email, fecha, edad } = Registro\r\n\r\n    return (\r\n        <SectionFormulario>\r\n            <form>\r\n                <input type=\"number\"\r\n                    placeholder=\"ingrese el id\"\r\n                    value={id}\r\n                    name=\"id\"\r\n                    onChange={OnChange} />\r\n\r\n                <input type=\"text\"\r\n                    placeholder=\"ingrese el usuario\"\r\n                    value={usuario}\r\n                    name=\"usuario\"\r\n                    onChange={OnChange} />\r\n\r\n                <input type=\"e-mail\"\r\n                    placeholder=\"ingrese el correo\"\r\n                    value={email}\r\n                    name=\"email\"\r\n                    onChange={OnChange} />\r\n\r\n\r\n                <input type=\"date\"\r\n                    placeholder=\"ingrese la fecha\"\r\n                    value={fecha}\r\n                    name=\"fecha\"\r\n                    onChange={OnChange} />\r\n\r\n                <input type=\"number\"\r\n                    placeholder=\"ingrese la edad\"\r\n                    value={edad}\r\n                    name=\"edad\"\r\n                    onChange={OnChange} />\r\n\r\n                <button type=\"submit\"\r\n                    onClick={OnClick}\r\n                >\r\n                    Registrar usuario\r\n            </button>\r\n            </form>\r\n            {\r\n                (Validation) && ( \r\n                    <h2>\r\n                        Rellene todos los campos correspondientes\r\n                    </h2>\r\n                )\r\n            }\r\n        </SectionFormulario>\r\n\r\n    )\r\n}\r\nexport default Formulario;","import styled from \"styled-components\";\r\n\r\n\r\nexport const SectionUsuarios = styled.section`\r\n    width:100%;\r\n    height:100%;\r\n    h2{\r\n        font-size:25px;\r\n    }\r\n    display:flex;\r\n    flex-direction:column;\r\n    div{\r\n        h2{\r\n            font-size:15px;\r\n        }\r\n    }\r\n`;","import React, { useContext } from \"react\";\r\nimport { GridContext } from \"../context/GridContext\";\r\n\r\nimport { SectionUsuarios } from \"../Styles/ListaUsuariosStyles\";\r\nconst ListaUsuarios = () => {\r\n    const { Users, setUsers, setRegistro, filter , FilterisOn } = useContext(GridContext)\r\n\r\n    // boton eliminar\r\n    const OnErase = (e) =>{\r\n        e.preventDefault();\r\n        const id = e.currentTarget.id;\r\n        setUsers(Users.filter(registro => registro.id !== id ));\r\n    }\r\n    // boton editar\r\n\r\n    const OnEditar = (e) => {\r\n        e.preventDefault();\r\n        const id = e.currentTarget.id;\r\n        const itemEdit = Users.filter(registro => registro.id == id);\r\n        setRegistro(itemEdit[0]);\r\n        setUsers(Users.filter(registro => registro.id !== id ))\r\n\r\n\r\n    }\r\n    return (\r\n        <SectionUsuarios>\r\n            {\r\n                // detecta si la lista de usuarios esta vacia o no\r\n                (Users.length == 0) ? (<h2>\r\n                    No hay registros\r\n                </h2>)\r\n                    :\r\n                    // si filter esta activo o no\r\n                    (\r\n                    (FilterisOn) ?\r\n                    (\r\n                        Users.map(item => (\r\n                            item.id.includes(filter) &&\r\n                        <div id={item.id}\r\n                             key={item.id}>\r\n                            <h2>\r\n                                ID:{ item.id }\r\n                            </h2>\r\n                            <h2>\r\n                                Usuario:{ item.usuario}\r\n                            </h2>\r\n                            <h2>\r\n                                Email:{ item.email }\r\n                            </h2>\r\n                            <h2>\r\n                                Fecha:{ item.fecha }\r\n                            </h2>\r\n                            <h2>\r\n                                Edad:{ item.edad }\r\n                            </h2>\r\n                            <button type=\"button\"\r\n                                    onClick = {OnErase}\r\n                                    id = {item.id}\r\n                                    >\r\n                                        Eliminar\r\n                            </button>\r\n                            <button type=\"button\"\r\n                                    id = {item.id}\r\n                                    onClick = {OnEditar}\r\n                                    >\r\n                                        Editar\r\n                            </button>\r\n                        </div>\r\n                    )))\r\n                    :\r\n                    ((\r\n                        Users.map(item => (\r\n                        <div id={item.id}\r\n                             key={item.id}>\r\n                            <h2>\r\n                                ID:{ item.id }\r\n                            </h2>\r\n                            <h2>\r\n                                Usuario:{ item.usuario}\r\n                            </h2>\r\n                            <h2>\r\n                                Email:{ item.email }\r\n                            </h2>\r\n                            <h2>\r\n                                Fecha:{ item.fecha }\r\n                            </h2>\r\n                            <h2>\r\n                                Edad:{ item.edad }\r\n                            </h2>\r\n                            <button type=\"button\"\r\n                                    onClick = {OnErase}\r\n                                    id = {item.id}\r\n                                    >\r\n                                        Eliminar\r\n                            </button>\r\n                            <button type=\"button\"\r\n                                    id = {item.id}\r\n                                    onClick = {OnEditar}\r\n                                    >\r\n                                        Editar\r\n                            </button>\r\n                        </div>\r\n                    )))))\r\n            }\r\n        </SectionUsuarios>\r\n    )\r\n}\r\nexport default ListaUsuarios;","import styled from \"styled-components\";\r\n\r\nexport const FormularioSearch = styled.form`\r\nwidth:100%;\r\nheight:100%;\r\n    input{\r\n        width:90%;\r\n        height:50%;\r\n        border-radius:20px;\r\n        color:black;\r\n        text-align:center;\r\n        font-size:20px;\r\n        border: 1px solid white;\r\n        &::placeholder{\r\n            color:black;\r\n            text-align:center;\r\n        }\r\n    }\r\n`;","\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { GridContext } from \"../context/GridContext\";\r\nimport {FormularioSearch} from \"../Styles/SearchBarStyles\";\r\nconst SearchBar = () => {\r\n    const { Users, filter, setfilter, setFilterisOn } = useContext(GridContext)\r\n    const onChangeFilter = (e) => {\r\n        setFilterisOn(true);\r\n        const value = e.currentTarget.value;\r\n        if (value.trim() == \"\") {\r\n            setFilterisOn(false)\r\n            setfilter(value)\r\n        } else {\r\n            setfilter(value)\r\n        }\r\n    }\r\n    return (\r\n        <FormularioSearch>\r\n            <input type=\"number\"\r\n                placeholder=\"ingrese el id\"\r\n                onChange={onChangeFilter}\r\n                value={filter} />\r\n        </FormularioSearch>\r\n    )\r\n}\r\nexport default SearchBar;","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n    width:90vw;\r\n    height:80vh;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    text-align:center;\r\n`;\r\nexport const Search = styled.nav`\r\n    width:100%;\r\n    height:15%;\r\n`;\r\nexport const Container = styled.div`\r\n    display:flex;\r\n    height:80%;\r\n    margin-top:5%;\r\n`;\r\nexport const FormularioContainer = styled.div`\r\n    flex-basis:40%;\r\n    height:100%;\r\n    margin-right:10%;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n`;\r\nexport const ListaUsuariosContainer = styled.div`\r\n    flex-basis:40%;\r\n    height:100%;\r\n`;","import React from \"react\";\r\nimport Formulario from \"./Formulario\";\r\nimport ListaUsuarios from \"./ListaUsuarios\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { Section, Search, Container, FormularioContainer, ListaUsuariosContainer } from \"../Styles/GridStyles\"\r\nconst Grid = () => {\r\n    return (\r\n        <Section>\r\n            <Search>\r\n                <h3>\r\n                    Barra de Busqueda\r\n                </h3>\r\n                <SearchBar />\r\n            </Search>\r\n            <Container>\r\n                <FormularioContainer>\r\n                    <h3>\r\n                        Formulario\r\n                    </h3>\r\n                    <Formulario />\r\n                </FormularioContainer>\r\n                <ListaUsuariosContainer>\r\n                    <h3>\r\n                        Lista de Usuarios\r\n                    </h3>\r\n                    <ListaUsuarios />\r\n                </ListaUsuariosContainer>\r\n            </Container>\r\n        </Section>\r\n    )\r\n}\r\nexport default Grid;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body{\r\n        background: #fd746c;  /* fallback for old browsers */\r\nbackground: -webkit-linear-gradient(to right, #ff9068, #fd746c);  /* Chrome 10-25, Safari 5.1-6 */\r\nbackground: linear-gradient(to right, #ff9068, #fd746c); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n        text-align:center;\r\n        h2{\r\n            font-size:40px;\r\n        }\r\n    }\r\n`;\r\nexport default GlobalStyle;","import { GridProvider } from \"../src/context/GridContext\";\nimport Grid from \"./components/Grid\";\nimport GlobalStyle from \"./Styles/GlobalStyles\";\nfunction App() {\n  return (\n    <GridProvider>\n      <GlobalStyle/>\n        <h2>\n          CRUD\n    </h2>\n        <Grid />\n    </GridProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}